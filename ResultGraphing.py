import pygal
from lxml import *

class graphResults:
    def graph(data, graphType):
        #data is passed to this function as a dictionary of api results. 
        dateLessData = data.values()
        opens = []
        highs = []
        lows = []
        close = []
        #volumes = []

        for x in dateLessData:
            opens.append(float(x.get("1. open")))
            highs.append(float(x.get("2. high")))
            lows.append(float(x.get("3. low")))
            close.append(float(x.get("4. close")))
            #volumes.append(float(x.get("5. volume")))

        if graphType == 0:
            chart = pygal.Bar()
            chart.add("Opens", opens)
            chart.add("Highs", highs)
            chart.add("Lows", lows)
            chart.add("Closes", close)
            #chart.add("Volumes", volumes)
            chart.render_in_browser()
        else:
            chart = pygal.Line()
            chart.add("Opens", opens)
            chart.add("Highs", highs)
            chart.add("Lows", lows)
            chart.add("Closes", close)
            #chart.add("Volumes", volumes)
            chart.render_in_browser()

#each record has an open, high, low, close, and volume. 




##############Testing Area#################

"""
test_data = {'2022-07-13 16:15:00': {'1. open': '134.9200', '2. high': '134.9200', '3. low': '134.9200', '4. close': '134.9200', '5. volume': '21815'}, '2022-07-13 16:00:00': {'1. open': '134.9900', '2. high': '135.3400', '3. low': '134.7600', '4. close': '134.9100', '5. volume': '363341'}, '2022-07-13 15:45:00': {'1. open': '135.2600', '2. high': '135.2600', '3. low': '134.9700', '4. close': '135.0000', '5. volume': '109561'}, '2022-07-13 15:30:00': {'1. open': '135.7600', '2. high': '135.7700', '3. low': '135.2100', '4. close': '135.2300', 
'5. volume': '85639'}, '2022-07-13 15:15:00': {'1. open': '136.2600', '2. high': '136.2600', '3. low': '135.6900', '4. close': '135.7900', '5. volume': '52539'}, '2022-07-13 15:00:00': {'1. open': '136.2000', '2. high': '136.2700', '3. low': '135.8300', '4. close': '136.2700', '5. volume': '61415'}, '2022-07-13 14:45:00': {'1. open': '135.9900', '2. high': '136.2300', '3. low': '135.9100', '4. close': '136.1350', '5. volume': '47300'}, '2022-07-13 14:30:00': {'1. open': '135.6900', '2. high': '135.9600', '3. low': '135.5175', '4. close': '135.9400', '5. volume': '66934'}, '2022-07-13 14:15:00': {'1. open': '135.9400', '2. high': '135.9400', '3. low': '135.2110', '4. close': '135.6900', '5. volume': '65498'}, '2022-07-13 14:00:00': {'1. open': '135.7700', '2. high': '136.0700', '3. low': '135.7400', '4. close': '135.9500', '5. volume': '48270'}, '2022-07-13 13:45:00': {'1. open': '136.0150', '2. high': '136.0150', '3. low': '135.7400', '4. close': '135.7900', '5. volume': '71167'}, '2022-07-13 13:30:00': {'1. open': '136.2850', '2. high': '136.3250', '3. low': '135.8634', '4. close': '136.0400', '5. volume': '67235'}, '2022-07-13 13:15:00': {'1. open': '135.8800', '2. high': '136.3000', '3. low': '135.7600', '4. close': '136.3000', '5. volume': '53946'}, '2022-07-13 13:00:00': {'1. open': '135.3600', '2. high': '135.8500', '3. low': '135.2600', '4. close': '135.8373', '5. volume': '43776'}, '2022-07-13 12:45:00': {'1. open': '135.3800', '2. high': '135.4600', '3. low': '135.1850', '4. close': '135.3204', '5. volume': '43652'}, '2022-07-13 12:30:00': {'1. open': '134.8600', '2. high': '135.4000', '3. low': '134.8500', '4. close': '135.3900', '5. volume': '19433'}, '2022-07-13 12:15:00': {'1. open': '134.9400', '2. high': '135.1000', '3. low': '134.8350', '4. close': '134.8700', '5. volume': '31506'}, '2022-07-13 12:00:00': {'1. open': '134.7800', '2. high': '135.0400', '3. low': '134.5750', '4. close': '134.8400', '5. volume': '31185'}, '2022-07-13 11:45:00': {'1. open': '134.3500', '2. high': '135.0883', '3. low': '134.3500', '4. close': '134.7700', '5. volume': '46255'}, '2022-07-13 11:30:00': {'1. open': '134.8200', '2. high': '135.0300', '3. low': '134.3400', '4. close': '134.3700', '5. volume': '51124'}, '2022-07-13 11:15:00': {'1. open': '134.7800', '2. high': '135.4300', '3. low': '134.6500', '4. close': '134.8800', '5. volume': '171831'}, '2022-07-13 11:00:00': {'1. open': '134.3200', '2. high': '134.8700', '3. low': '134.3150', '4. close': '134.7500', '5. volume': '153417'}, '2022-07-13 10:45:00': {'1. open': '133.4500', '2. high': '134.3200', '3. low': '133.1900', '4. close': '134.3200', '5. volume': '114815'}, '2022-07-13 10:30:00': {'1. open': '133.2750', '2. high': '133.4800', '3. low': '132.8500', '4. close': '133.4800', '5. volume': '125986'}, '2022-07-13 10:15:00': {'1. open': '133.6700', '2. high': '133.9400', '3. low': '133.1700', '4. close': '133.3150', '5. volume': '177032'}, '2022-07-13 10:00:00': {'1. open': '133.3300', '2. high': '134.2900', '3. low': '133.2600', '4. close': '133.7250', '5. volume': '97452'}, '2022-07-13 09:45:00': {'1. open': '132.8800', '2. high': '134.4100', '3. low': '132.4670', '4. close': '133.3100', '5. volume': '212899'}, '2022-07-13 09:30:00': {'1. open': '131.8000', '2. high': '133.2700', '3. low': '131.8000', '4. close': '133.2700', '5. volume': '2255'}, '2022-07-13 09:00:00': {'1. open': '132.4400', '2. high': '132.4400', '3. low': '132.4400', '4. close': '132.4400', '5. volume': '318'}, '2022-07-13 08:45:00': {'1. open': '133.7900', '2. high': '133.7900', '3. low': '133.0200', '4. close': '133.6400', '5. volume': '3332'}, '2022-07-12 16:15:00': {'1. open': '134.4400', '2. high': '134.4400', '3. low': '134.4400', '4. close': '134.4400', '5. volume': '173499'}, '2022-07-12 16:00:00': {'1. open': '134.1900', '2. high': '134.6700', '3. low': '134.1700', '4. close': '134.4500', '5. volume': '436702'}, '2022-07-12 15:45:00': {'1. open': '134.4200', '2. high': '134.4800', '3. low': '134.0800', '4. close': '134.1900', '5. volume': '95995'}, '2022-07-12 15:30:00': {'1. open': '134.7100', '2. high': '134.9000', '3. low': '134.4100', '4. close': '134.4700', '5. volume': '97615'}, '2022-07-12 15:15:00': {'1. open': '135.0100', '2. high': '135.0200', '3. low': '134.5200', '4. close': '134.7200', '5. volume': '62102'}, '2022-07-12 15:00:00': {'1. open': '135.1100', '2. high': '135.2700', '3. low': '135.0300', '4. close': '135.0500', '5. volume': '38026'}, '2022-07-12 14:45:00': {'1. open': '135.4300', '2. high': '135.4600', '3. low': '135.0350', '4. close': '135.1150', '5. volume': '30370'}, '2022-07-12 14:30:00': {'1. open': '135.4400', '2. high': '135.5400', '3. low': '135.3600', '4. close': '135.4400', '5. volume': '42801'}, '2022-07-12 14:15:00': {'1. open': '135.5300', '2. high': '135.5600', '3. low': '135.3400', '4. close': '135.4300', '5. volume': '38226'}, '2022-07-12 14:00:00': {'1. open': '135.7700', '2. high': '135.7800', '3. low': '135.4600', '4. close': '135.5101', '5. volume': '29282'}, '2022-07-12 13:45:00': {'1. open': '135.8000', '2. high': '135.9500', '3. low': '135.7700', '4. close': '135.8200', '5. volume': '43026'}, '2022-07-12 13:30:00': {'1. open': '135.5900', '2. high': '135.8300', '3. low': '135.5500', '4. close': '135.7900', '5. volume': '40735'}, '2022-07-12 13:15:00': {'1. open': '135.8000', '2. high': '136.1300', '3. low': '135.4700', '4. close': '135.6000', '5. volume': '47592'}, '2022-07-12 13:00:00': {'1. open': '135.5650', '2. high': '135.8156', '3. low': '135.5274', '4. close': '135.7600', '5. volume': '50919'}, '2022-07-12 12:45:00': {'1. open': '135.5100', '2. high': '135.7462', '3. low': '135.5100', '4. close': '135.5400', '5. volume': '46626'}, '2022-07-12 12:30:00': {'1. open': '135.5800', '2. high': '135.6500', '3. low': '135.4400', '4. close': '135.5000', '5. volume': '41507'}, '2022-07-12 12:15:00': {'1. open': '135.4900', '2. high': '135.5900', '3. low': '135.3200', '4. close': '135.5600', '5. volume': '32327'}, '2022-07-12 12:00:00': {'1. open': '135.4100', '2. high': '135.5800', '3. low': '135.2850', '4. close': '135.4700', '5. volume': '49472'}, '2022-07-12 11:45:00': {'1. open': '135.7100', '2. high': '135.7690', '3. low': '135.2600', '4. close': '135.4000', '5. volume': '40825'}, '2022-07-12 11:30:00': {'1. open': '135.5800', '2. high': '135.6800', '3. low': '135.2500', '4. close': '135.6800', '5. volume': '74893'}, '2022-07-12 11:15:00': {'1. open': '135.2700', '2. high': '135.7400', '3. low': '135.0300', '4. close': '135.5850', '5. volume': '53384'}, '2022-07-12 11:00:00': {'1. open': '134.9700', '2. high': '135.3400', '3. low': '134.9000', '4. close': '135.2500', '5. volume': '61618'}, '2022-07-12 10:45:00': {'1. open': '134.9900', '2. high': '135.5200', '3. low': '134.8500', '4. close': '134.9300', '5. volume': '45460'}, '2022-07-12 10:30:00': {'1. open': '135.1300', '2. high': '135.1300', '3. low': '134.7900', '4. close': '134.9800', '5. volume': '59406'}, '2022-07-12 10:15:00': {'1. open': '134.8350', '2. high': '135.4800', '3. low': '134.5500', '4. close': '135.1700', '5. volume': '72629'}, '2022-07-12 10:00:00': {'1. open': '134.8400', '2. high': '135.4900', '3. low': '134.7725', '4. close': '134.8400', '5. volume': '48149'}, '2022-07-12 09:45:00': {'1. open': '134.7100', '2. high': '135.1600', '3. low': '134.0500', '4. close': '134.8100', '5. volume': '123567'}, '2022-07-11 19:45:00': {'1. open': '134.7000', '2. high': '134.7000', '3. low': '134.7000', '4. close': '134.7000', '5. volume': '800'}, '2022-07-11 16:45:00': {'1. open': '134.7300', '2. high': '134.7300', '3. low': '134.7300', '4. close': '134.7300', '5. volume': '3335'}, '2022-07-11 16:30:00': {'1. open': '134.7300', '2. high': '134.7300', '3. low': '134.7300', '4. close': '134.7300', '5. volume': '32425'}, '2022-07-11 16:15:00': {'1. open': '134.7300', '2. high': '134.7300', '3. low': '134.7300', '4. close': '134.7300', '5. volume': '55184'}, '2022-07-11 16:00:00': {'1. open': '134.7600', '2. high': '134.9600', '3. low': '134.4500', 
'4. close': '134.7400', '5. volume': '321052'}, '2022-07-11 15:45:00': {'1. open': '134.6550', '2. high': '134.8600', '3. low': '134.6550', '4. close': '134.7400', '5. volume': '97651'}, '2022-07-11 15:30:00': {'1. open': '134.7000', '2. high': '134.7800', '3. low': '134.5300', '4. close': '134.6600', '5. volume': '57971'}, '2022-07-11 15:15:00': {'1. open': '134.8800', '2. high': '134.9600', '3. low': '134.5800', '4. close': '134.7100', '5. volume': '46758'}, '2022-07-11 15:00:00': {'1. open': '135.0600', '2. high': '135.1300', '3. low': '134.8600', '4. close': '134.9000', '5. volume': '42566'}, '2022-07-11 14:45:00': {'1. open': '134.8900', '2. high': '135.1300', '3. low': '134.8700', '4. close': '135.0500', '5. volume': '35891'}}

test_data_values = test_data.values()
opens = []
highs = []
lows = []
close = []
volumes = []

for x in test_data_values:
    opens.append(float(x.get("1. open")))
    highs.append(float(x.get("2. high")))
    lows.append(float(x.get("3. low")))
    close.append(float(x.get("4. close")))
    volumes.append(float(x.get("5. volume")))

chart = pygal.Bar()
chart.add("Open", opens)

chart.render_in_browser()


#chart = pygal.Line()
#...
#chart.render_in_browser()

""" 